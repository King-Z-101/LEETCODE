class Solution:
    def pivotIndex(self, nums: List[int]) -> int:
        S = sum(nums)
        leftsum = 0
        for i, x in enumerate(nums):
            if leftsum == (S - leftsum - x):
                return i
            leftsum += x
        return -1

        '''
        Note:
        dup numbers are possible
        Intuition:
        Hashtable:
        (index: left - right)
        to one pass through all elements getting the prefix sum at that index
        second pass subtract all element to the right of the index
        
        ht = {}
        i = 0
        offset = 0
        while i < len(nums):
            if i != 0:
                ht[i] = ht[i - 1 - offset] + nums[i - 1]
                if ht[i] == ht[i - 1 - offset]:
                    offset += 1
                    ht.popitem()
            else:
                ht[i] = 0
            i += 1
        print(ht) 
        numsSum = 0
        while i > 0:
            i -= 1
            if i == len(nums) - 1:
                numsSum = 0
            else:
                numsSum += nums[i+1]
                if i in ht.keys():
                    ht[i] = [ht[i], numsSum]
                    if ht[i][0] == ht[i][1]:
                        print(ht)
                        return i


        return -1 
        '''
        
