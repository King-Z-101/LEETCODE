class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        prevMap = {} # val : index
        for i in range(len(nums)):
            diff = target - nums[i]
            if diff in prevMap:
                return [prevMap[diff], i]
            prevMap[nums[i]] = i
        return 0
    '''
    prevMap = {
        3: 0
        2: 1
    }
    res = [1, 2]
    '''            

#Pseudocode:
'''
    1. go through nums list
    2. check if a number is less than target and record it as a root
    3. go through rest of list to find if there is another number that adds up to it, if not then move on to next possible root
'''
